struct XML_ParserStruct()
alias XML_Parser = *XML_ParserStruct

alias XML_Bool = ubyte

alias XML_Char = ubyte

alias XML_LChar = ubyte

#define XML_LARGE_SIZE true

#if XML_LARGE_SIZE

alias XML_Index = long

alias XML_Size = ulong

#else

alias XML_Index = int

alias XML_Size = uint

#end

#define XML_ATTR_INFO true

#define XML_GE true

define XML_TRUE = (1 as XML_Bool)
define XML_FALSE = (0 as XML_Bool)

foreign enum XML_Status (
  XML_STATUS_ERROR,
  XML_STATUS_OK,
  XML_STATUS_SUSPENDED
)

foreign enum XML_Error (
  XML_ERROR_NONE,
  XML_ERROR_NO_MEMORY,
  XML_ERROR_SYNTAX,
  XML_ERROR_NO_ELEMENTS,
  XML_ERROR_INVALID_TOKEN,
  XML_ERROR_UNCLOSED_TOKEN,
  XML_ERROR_PARTIAL_CHAR,
  XML_ERROR_TAG_MISMATCH,
  XML_ERROR_DUPLICATE_ATTRIBUTE,
  XML_ERROR_JUNK_AFTER_DOC_ELEMENT,
  XML_ERROR_PARAM_ENTITY_REF,
  XML_ERROR_UNDEFINED_ENTITY,
  XML_ERROR_RECURSIVE_ENTITY_REF,
  XML_ERROR_ASYNC_ENTITY,
  XML_ERROR_BAD_CHAR_REF,
  XML_ERROR_BINARY_ENTITY_REF,
  XML_ERROR_ATTRIBUTE_EXTERNAL_ENTITY_REF,
  XML_ERROR_MISPLACED_XML_PI,
  XML_ERROR_UNKNOWN_ENCODING,
  XML_ERROR_INCORRECT_ENCODING,
  XML_ERROR_UNCLOSED_CDATA_SECTION,
  XML_ERROR_EXTERNAL_ENTITY_HANDLING,
  XML_ERROR_NOT_STANDALONE,
  XML_ERROR_UNEXPECTED_STATE,
  XML_ERROR_ENTITY_DECLARED_IN_PE,
  XML_ERROR_FEATURE_REQUIRES_XML_DTD,
  XML_ERROR_CANT_CHANGE_FEATURE_ONCE_PARSING,
  /* Added in 1.95.7. */
  XML_ERROR_UNBOUND_PREFIX,
  /* Added in 1.95.8. */
  XML_ERROR_UNDECLARING_PREFIX,
  XML_ERROR_INCOMPLETE_PE,
  XML_ERROR_XML_DECL,
  XML_ERROR_TEXT_DECL,
  XML_ERROR_PUBLICID,
  XML_ERROR_SUSPENDED,
  XML_ERROR_NOT_SUSPENDED,
  XML_ERROR_ABORTED,
  XML_ERROR_FINISHED,
  XML_ERROR_SUSPEND_PE,
  /* Added in 2.0. */
  XML_ERROR_RESERVED_PREFIX_XML,
  XML_ERROR_RESERVED_PREFIX_XMLNS,
  XML_ERROR_RESERVED_NAMESPACE_URI,
  /* Added in 2.2.1. */
  XML_ERROR_INVALID_ARGUMENT,
  /* Added in 2.3.0. */
  XML_ERROR_NO_BUFFER,
  /* Added in 2.4.0. */
  XML_ERROR_AMPLIFICATION_LIMIT_BREACH
)

foreign enum XML_Content_Type (
  XML_CTYPE_EMPTY,
  XML_CTYPE_ANY,
  XML_CTYPE_MIXED,
  XML_CTYPE_NAME,
  XML_CTYPE_CHOICE,
  XML_CTYPE_SEQ
)

foreign enum XML_Content_Quant (
  XML_CQUANT_NONE,
  XML_CQUANT_OPT,
  XML_CQUANT_REP,
  XML_CQUANT_PLUS
)

alias XML_Content = XML_cp

struct XML_cp (
  type XML_Content_Type
  quant XML_Content_Quant
  name *XML_Char
  numchildren uint
  children *XML_Content
)

alias XML_ElementDeclHandler = func(ptr, *XML_Char, *XML_Content) void

foreign XML_SetElementDeclHandler(parser XML_Parser, eldecl XML_ElementDeclHandler) void

alias XML_AttlistDeclHandler = func(ptr, *XML_Char, *XML_Char, *XML_Char, *XML_Char, int) void

foreign XML_SetAttlistDeclHandler(parser XML_Parser, attdecl XML_AttlistDeclHandler) void

alias XML_XmlDeclHandler = func(ptr, *XML_Char, *XML_Char, int) void

foreign XML_SetXmlDeclHandler(parser XML_Parser, xmldecl XML_XmlDeclHandler) void

struct XML_Memory_Handling_Suite (
  malloc_fcn func(usize) ptr
  realloc_fcn func(ptr, usize) ptr
  free_fcn func(ptr) void
)

foreign XML_ParserCreate(encoding *XML_Char) XML_Parser

foreign XML_ParserCreateNS(encoding *XML_Char, namespaceSeparator XML_Char) XML_Parser

foreign XML_ParserCreate_MM(encoding *XML_Char, memsuite *XML_Memory_Handling_Suite, namespaceSeparator *XML_Char) XML_Parser

foreign XML_ParserReset(parser XML_Parser, encoding *XML_Char) XML_Bool

alias XML_StartElementHandler = func(ptr, *XML_Char, **XML_Char) void

alias XML_EndElementHandler = func(ptr, *XML_Char) void

alias XML_CharacterDataHandler = func(ptr, *XML_Char, int) void

alias XML_ProcessingInstructionHandler = func(ptr, *XML_Char, *XML_Char) void

alias XML_CommentHandler = func(ptr, *XML_Char) void

alias XML_StartCdataSectionHandler = func(ptr) void

alias XML_EndCdataSectionHandler = func(ptr) void

alias XML_DefaultHandler = func(ptr, *XML_Char, int) void

alias XML_StartDoctypeDeclHandler = func(ptr, *XML_Char, *XML_Char, *XML_Char, int) void

alias XML_EndDoctypeDeclHandler = func(ptr) void

alias XML_EntityDeclHandler = func(ptr, *XML_Char, int, *XML_Char, int, *XML_Char, *XML_Char, *XML_Char, *XML_Char) void

foreign XML_SetEntityDeclHandler(parser XML_Parser, handler XML_EntityDeclHandler) void

alias XML_UnparsedEntityDeclHandler = func(ptr, *XML_Char, *XML_Char, *XML_Char, *XML_Char, *XML_Char) void

alias XML_NotationDeclHandler = func(ptr, *XML_Char, *XML_Char, *XML_Char, *XML_Char) void

alias XML_StartNamespaceDeclHandler = func(ptr, *XML_Char, *XML_Char) void

alias XML_EndNamespaceDeclHandler = func(ptr, *XML_Char) void

alias XML_NotStandaloneHandler = func(ptr) int

alias XML_ExternalEntityRefHandler = func(XML_Parser, *XML_Char, *XML_Char, *XML_Char, *XML_Char) int

alias XML_SkippedEntityHandler = func(ptr, *XML_Char, int) void

struct XML_Encoding (
  map [256] int
  data ptr
  convert func(ptr, *ubyte) int
  release func(ptr) void
)

alias XML_UnknownEncodingHandler = func(ptr, *XML_Char, *XML_Encoding) int

foreign XML_SetElementHandler(parser XML_Parser, start XML_StartElementHandler, end XML_EndElementHandler) void

foreign XML_SetStartElementHandler(parser XML_Parser, handler XML_StartElementHandler) void

foreign XML_SetEndElementHandler(parser XML_Parser, handler XML_EndElementHandler) void

foreign XML_SetCharacterDataHandler(parser XML_Parser, handler XML_CharacterDataHandler) void

foreign XML_SetProcessingInstructionHandler(parser XML_Parser, handler XML_ProcessingInstructionHandler) void

foreign XML_SetCommentHandler(parser XML_Parser, handler XML_CommentHandler) void

foreign XML_SetCdataSectionHandler(parser XML_Parser, start XML_StartCdataSectionHandler, end XML_EndCdataSectionHandler) void

foreign XML_SetStartCdataSectionHandler(parser XML_Parser, start XML_StartCdataSectionHandler) void

foreign XML_SetEndCdataSectionHandler(parser XML_Parser, end XML_EndCdataSectionHandler) void

foreign XML_SetDefaultHandler(parser XML_Parser, handler XML_DefaultHandler) void

foreign XML_SetDefaultHandlerExpand(parser XML_Parser, handler XML_DefaultHandler) void

foreign XML_SetDoctypeDeclHandler(parser XML_Parser, start XML_StartDoctypeDeclHandler, end XML_EndDoctypeDeclHandler) void

foreign XML_SetStartDoctypeDeclHandler(parser XML_Parser, start XML_StartDoctypeDeclHandler) void

foreign XML_SetEndDoctypeDeclHandler(parser XML_Parser, end XML_EndDoctypeDeclHandler) void

foreign XML_SetUnparsedEntityDeclHandler(parser XML_Parser, handler XML_UnparsedEntityDeclHandler) void

foreign XML_SetNotationDeclHandler(parser XML_Parser, handler XML_NotationDeclHandler) void

foreign XML_SetNamespaceDeclHandler(parser XML_Parser, start XML_StartNamespaceDeclHandler, end XML_EndNamespaceDeclHandler) void

foreign XML_SetStartNamespaceDeclHandler(parser XML_Parser, start XML_StartNamespaceDeclHandler) void

foreign XML_SetEndNamespaceDeclHandler(parser XML_Parser, end XML_EndNamespaceDeclHandler) void

foreign XML_SetNotStandaloneHandler(parser XML_Parser, handler XML_NotStandaloneHandler) void

foreign XML_SetExternalEntityRefHandler(parser XML_Parser, handler XML_ExternalEntityRefHandler) void

foreign XML_SetExternalEntityRefHandlerArg(parser XML_Parser, arg ptr) void

foreign XML_SetSkippedEntityHandler(parser XML_Parser, handler XML_SkippedEntityHandler) void

foreign XML_SetUnknownEncodingHandler(parser XML_Parser, handler XML_UnknownEncodingHandler, encodingHandlerData ptr) void

foreign XML_DefaultCurrent(parser XML_Parser) void

foreign XML_SetReturnNSTriplet(parser XML_Parser, do_nst int) void

foreign XML_SetUserData(parser XML_Parser, userData ptr) void

func XML_GetUserData(parser $T) ptr = *(parser as *ptr)

foreign XML_SetEncoding(parser XML_Parser, encoding *XML_Char) XML_Status

foreign XML_UseParserAsHandlerArg(parser XML_Parser) void

foreign XML_UseForeignDTD(parser XML_Parser, useDTD XML_Bool) XML_Error

foreign XML_SetBase(parser XML_Parser, base *XML_Char) XML_Status

foreign XML_GetBase(parser XML_Parser) *XML_Char

foreign XML_GetSpecifiedAttributeCount(parser XML_Parser) int

foreign XML_GetIdAttributeIndex(parser XML_Parser) int

#if XML_ATTR_INFO

struct XML_AttrInfo (
  nameStart  XML_Index
  nameEnd    XML_Index
  valueStart XML_Index
  valueEnd   XML_Index
)

foreign XML_GetAttributeInfo(parser XML_Parser) *XML_AttrInfo
#end

foreign XML_Parse(parser XML_Parser, s *ubyte, len int, isFinal int) XML_Status

foreign XML_GetBuffer(parser XML_Parser, len int) ptr

foreign XML_ParseBuffer(parser XML_Parser, len int, isFinal int) XML_Status

foreign XML_StopParser(parser XML_Parser, resumable XML_Bool) XML_Status

foreign XML_ResumeParser(parser XML_Parser) XML_Status

foreign enum XML_Parsing ( XML_INITIALIZED, XML_PARSING, XML_FINISHED, XML_SUSPENDED )

struct XML_ParsingStatus (
  parsing XML_Parsing,
  finalBuffer XML_Bool
)

foreign XML_GetParsingStatus(parser XML_Parser, status *XML_ParsingStatus) void

foreign XML_ExternalEntityParserCreate(parser XML_Parser, context *XML_Char, encoding *XML_Char) XML_Parser

foreign enum XML_ParamEntityParsing (
  XML_PARAM_ENTITY_PARSING_NEVER,
  XML_PARAM_ENTITY_PARSING_UNLESS_STANDALONE,
  XML_PARAM_ENTITY_PARSING_ALWAYS
)

foreign XML_SetParamEntityParsing(parser XML_Parser, parsing XML_ParamEntityParsing) int

foreign XML_SetHashSalt(parser XML_Parser, hash_salt ulong) int

foreign XML_GetErrorCode(parser XML_Parser) XML_Error

foreign XML_GetCurrentLineNumber(parser XML_Parser) XML_Size

foreign XML_GetCurrentColumnNumber(parser XML_Parser) XML_Size

foreign XML_GetCurrentByteIndex(parser XML_Parser) XML_Index

foreign XML_GetCurrentByteCount(parser XML_Parser) int

foreign XML_GetInputContext(parser XML_Parser, offset *int, size *int) *ubyte

func alias XML_GetErrorLineNumber => XML_GetCurrentLineNumber

func alias XML_GetErrorColumnNumber => XML_GetCurrentColumnNumber

func alias XML_GetErrorByteIndex => XML_GetCurrentByteIndex

foreign XML_FreeContentModel(parser XML_Parser, model *XML_Content) void

foreign XML_MemMalloc(parser XML_Parser, size usize) void

foreign XML_MemRealloc(parser XML_Parser, pointer ptr, size usize) void

foreign XML_MemFree(parser XML_Parser, pointer ptr) void

foreign XML_ParserFree(parser XML_Parser) void

foreign XML_ErrorString(code XML_Error) *XML_LChar

foreign XML_ExpatVersion() *XML_LChar

struct XML_Expat_Version ( major int, minor int, micro int )

foreign XML_ExpatVersionInfo() *XML_Expat_Version

/* Added in Expat 1.95.5. */
enum XML_FeatureEnum (
  XML_FEATURE_END,
  XML_FEATURE_UNICODE,
  XML_FEATURE_UNICODE_WCHAR_T,
  XML_FEATURE_DTD,
  XML_FEATURE_CONTEXT_BYTES,
  XML_FEATURE_MIN_SIZE,
  XML_FEATURE_SIZEOF_XML_CHAR,
  XML_FEATURE_SIZEOF_XML_LCHAR,
  XML_FEATURE_NS,
  XML_FEATURE_LARGE_SIZE,
  XML_FEATURE_ATTR_INFO,
  /* Added in Expat 2.4.0. */
  XML_FEATURE_BILLION_LAUGHS_ATTACK_PROTECTION_MAXIMUM_AMPLIFICATION_DEFAULT,
  XML_FEATURE_BILLION_LAUGHS_ATTACK_PROTECTION_ACTIVATION_THRESHOLD_DEFAULT,
  /* Added in Expat 2.6.0. */
  XML_FEATURE_GE
  /* Additional features must be added to the end of this enum. */
)

struct XML_Feature (
  feature XML_FeatureEnum
  name *XML_LChar
  value int
)

foreign XML_GetFeatureList() *XML_Feature

#if XML_GE
/* Added in Expat 2.4.0 for XML_DTD defined and
 * added in Expat 2.6.0 for XML_GE == 1. */
foreign XML_SetBillionLaughsAttackProtectionMaximumAmplification(
    parser XML_Parser, maximumAmplificationFactor float) XML_Bool

/* Added in Expat 2.4.0 for XML_DTD defined and
 * added in Expat 2.6.0 for XML_GE == 1. */
foreign XML_SetBillionLaughsAttackProtectionActivationThreshold(
    parser XML_Parser, activationThresholdBytes ulong) XML_Bool
#end

define XML_MAJOR_VERSION = 2
define XML_MINOR_VERSION = 5
define XML_MICRO_VERSION = 0
