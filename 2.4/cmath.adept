
import 'sys/cmath.adept'

func acos(value float) float = acosf(value)
func asin(value float) float = asinf(value)
func atan(value float) float = atanf(value)
func atan2(a, b float) float = atan2f(a, b)
func cos(value float) float = cosf(value)
func cosh(value float) float = coshf(value)
func sin(value float) float = sinf(value)
func sinh(value float) float = sinhf(value)
func tan(value float) float = tanf(value)
func tanh(value float) float = tanhf(value)
func exp(value float) float = expf(value)
func log(value float) float = logf(value)
func log10(value float) float = log10f(value)
func mod(in value double, out remainder *double) double = modf(value, remainder)
func mod(in value float, out remainder *float) float = modff(value, remainder)
func pow(a, b float) float = powf(a, b)
func sqrt(value float) float = sqrtf(value)
func ceil(value float) float = ceilf(value)
func abs(value double) double = fabs(value)
func abs(value float)  float = fabsf(value)
func fabs(value float) float = fabsf(value)
func floor(value float) float = floorf(value)
func fmod(a, b float) float = fmodf(a, b)

func log(number $T~__number__) double = log(number as double)
func log10(number $T~__number__) double = log10(number as double)
func exp(number $T~__number__) double = exp(number as double)
func pow(a, b $T~__number__) double = pow(a as double, b as double)
func sqrt(number $T~__number__) double = sqrt(number as double)
func sin(number $T~__number__) double = sin(number as double)
func cos(number $T~__number__) double = cos(number as double)
func tan(number $T~__number__) double = tan(number as double)
func sinh(number $T~__number__) double = sinh(number as double)
func cosh(number $T~__number__) double = cosh(number as double)
func tanh(number $T~__number__) double = tanh(number as double)
func atan(number $T~__number__) double = atan(number as double)
func atan2(a, b $T~__number__) double = atan(a as double, b as double)
