pragma mac_only

import 'posix/pthread.adept'

#define __aarch64__ false

define TRUE = 1
define FALSE = 0

alias HWND = ptr
alias HSHM = ptr
alias ULONG = ulong
alias LONG = long
alias USHORT = ushort
alias SHORT = short
alias UWORD = ushort
alias WORD = short
alias UCHAR = ubyte
alias CHAR = byte
alias UINT = uint
alias INT = int

alias HTMX = *pthread_mutex_t

struct _dw_unix_event (
    mutex pthread_mutex_t,
    event pthread_cond_t,
    thread pthread_t,
    alive int,
    posted int,
)

alias HEV = *_dw_unix_event

alias DWTID = pthread_t

alias HMOD = ptr

struct _dw_unix_shm (
    fd int,
    path *ubyte,
    sid int,
    size int
)

alias HTREEITEM = ptr
alias HMENUI = ptr
alias HICN = ptr

struct _window_data (
    root *UserData,
    clickdefault HWND,
    flags ULONG,
    data ptr
)

alias WindowData = _window_data

struct _hpixmap (
    width ulong,
    height ulong,
    image ptr,
    font ptr,
    handle HWND
)

alias HPIXMAP = *_hpixmap

foreign _dw_pool_drain() void

define DW_DT_LEFT               = 0 /* NSTextAlignmentLeft */
define DW_DT_QUERYEXTENT        = 0
define DW_DT_UNDERSCORE         = 0
define DW_DT_STRIKEOUT          = 0
define DW_DT_TEXTATTRS          = 0
define DW_DT_EXTERNALLEADING    = 0
#if __aarch64__
define DW_DT_CENTER             = 1 /* NSTextAlignmentCenter */
define DW_DT_RIGHT              = 2 /* NSTextAlignmentRight */
#else
define DW_DT_CENTER             = 2 /* NSTextAlignmentCenter */
define DW_DT_RIGHT              = 1 /* NSTextAlignmentRight */
#end
define DW_DT_TOP                = 0
define DW_DT_VCENTER            = (1 << 10)
define DW_DT_BOTTOM             = 0
define DW_DT_HALFTONE           = 0
define DW_DT_MNEMONIC           = 0
define DW_DT_WORDBREAK          = (1 << 11)
define DW_DT_ERASERECT          = 0

define DW_FCF_CLOSEBUTTON       = (1 << 1) /* NSWindowStyleMaskClosable */
define DW_FCF_TITLEBAR          = (1 << 0) /* NSWindowStyleMaskTitled */
define DW_FCF_SYSMENU           = (1 << 1) /* NSWindowStyleMaskClosable */
define DW_FCF_MENU              = 0
define DW_FCF_SIZEBORDER        = (1 << 3) /* NSWindowStyleMaskResizable */
define DW_FCF_MINBUTTON         = (1 << 2) /* NSWindowStyleMaskMiniaturizable */
define DW_FCF_MAXBUTTON         = 0
define DW_FCF_MINMAX            = (1 << 2) /* NSWindowStyleMaskMiniaturizable */
define DW_FCF_DLGBORDER         = 0
define DW_FCF_BORDER            = 0
define DW_FCF_TASKLIST          = 0
define DW_FCF_NOMOVEWITHOWNER   = 0
define DW_FCF_SYSMODAL          = 0
define DW_FCF_HIDEBUTTON        = 0
define DW_FCF_HIDEMAX           = 0
define DW_FCF_AUTOICON          = 0
define DW_FCF_MAXIMIZE          = 0
define DW_FCF_MINIMIZE          = 0
define DW_FCF_TEXTURED          = (1 << 8) /* NSWindowStyleMaskTexturedBackground */
define DW_FCF_FULLSCREEN        = (1 << 4)

define DW_CFA_BITMAPORICON      = 1
define DW_CFA_STRING            = (1 << 1)
define DW_CFA_ULONG             = (1 << 2)
define DW_CFA_TIME              = (1 << 3)
define DW_CFA_DATE              = (1 << 4)
define DW_CFA_CENTER            = (1 << 5)
define DW_CFA_LEFT              = (1 << 6)
define DW_CFA_RIGHT             = (1 << 7)
define DW_CFA_STRINGANDICON     = (1 << 8)
define DW_CFA_HORZSEPARATOR     = 0
define DW_CFA_SEPARATOR         = 0

define DW_CRA_SELECTED          = 1
define DW_CRA_CURSORED          = (1 << 1)

define DW_CR_RETDATA            = (1 << 10)

define DW_LS_MULTIPLESEL        = 1

define DW_LIT_NONE              = -1

define DW_MLE_CASESENSITIVE     = 2 /* NSLiteralSearch */

define DW_BS_NOBORDER           = 1

define DW_POINTER_DEFAULT       = 0
define DW_POINTER_ARROW         = 1
define DW_POINTER_CLOCK         = 2
define DW_POINTER_QUESTION      = 3

define HWND_DESKTOP             = (0 as HWND)

/* flag values for dw_messagebox= () */
define DW_MB_OK                 = (1 << 1)
define DW_MB_OKCANCEL           = (1 << 2)
define DW_MB_YESNO              = (1 << 3)
define DW_MB_YESNOCANCEL        = (1 << 4)

define DW_MB_WARNING            = (1 << 10)
define DW_MB_ERROR              = (1 << 11)
define DW_MB_INFORMATION        = (1 << 12)
define DW_MB_QUESTION           = (1 << 13)

/* Virtual Key Codes */
define VK_LBUTTON               = 0xFF10 /* TODO */
define VK_RBUTTON               = 0xFF11 /* TODO */
define VK_CANCEL                = 0xFF12 /* TODO */
define VK_MBUTTON               = 0xFF13 /* TODO */
define VK_BACK                  = 0x7F
define VK_TAB                   = 0x09
define VK_CLEAR                 = 71
define VK_RETURN                = 13
define VK_MENU                  = 0xF735 /* NSMenuFunctionKey */
define VK_PAUSE                 = 0xF730 /* NSPauseFunctionKey */
define VK_CAPITAL               = 57
define VK_ESCAPE                = 0x1B
define VK_SPACE                 = ' 'ub
define VK_PRIOR                 = 0xF72C /* NSPageUpFunctionKey */
define VK_NEXT                  = 0xF72D /* NSPageDownFunctionKey */
define VK_END                   = 0xF72B /* NSEndFunctionKey */
define VK_HOME                  = 0xF729 /* NSHomeFunctionKey */
define VK_LEFT                  = 0xF702 /* NSLeftArrowFunctionKey */
define VK_UP                    = 0xF700 /* NSUpArrowFunctionKey */
define VK_RIGHT                 = 0xF703 /* NSRightArrowFunctionKey */
define VK_DOWN                  = 0xF701 /* NSDownArrowFunctionKey */
define VK_SELECT                = 0xF741 /* NSSelectFunctionKey */
define VK_PRINT                 = 0xF738 /* NSPrintFunctionKey */
define VK_EXECUTE               = 0xF742 /* NSExecuteFunctionKey */
define VK_SNAPSHOT              = 0xF72E /* NSPrintScreenFunctionKey */
define VK_INSERT                = 0xF727 /* NSInsertFunctionKey */
define VK_DELETE                = 0xF728 /* NSDeleteFunctionKey */
define VK_HELP                  = 0xF746 /* NSHelpFunctionKey */
define VK_LWIN                  = 55
define VK_RWIN                  = 0xFF14 /* TODO */
define VK_NUMPAD0               = 82
define VK_NUMPAD1               = 83
define VK_NUMPAD2               = 84
define VK_NUMPAD3               = 85
define VK_NUMPAD4               = 86
define VK_NUMPAD5               = 87
define VK_NUMPAD6               = 88
define VK_NUMPAD7               = 89
define VK_NUMPAD8               = 91
define VK_NUMPAD9               = 92
define VK_MULTIPLY              = 67
define VK_ADD                   = 69
define VK_SEPARATOR             = 0xFF15 /* TODO */
define VK_SUBTRACT              = 78
define VK_DECIMAL               = 65
define VK_DIVIDE                = 75
define VK_F1                    = 0xF704 /* NSF1FunctionKey */
define VK_F2                    = 0xF705 /* NSF2FunctionKey */
define VK_F3                    = 0xF706 /* NSF3FunctionKey */
define VK_F4                    = 0xF707 /* NSF4FunctionKey */
define VK_F5                    = 0xF708 /* NSF5FunctionKey */
define VK_F6                    = 0xF709 /* NSF6FunctionKey */
define VK_F7                    = 0xF70A /* NSF7FunctionKey */
define VK_F8                    = 0xF70B /* NSF8FunctionKey */
define VK_F9                    = 0xF70C /* NSF9FunctionKey */
define VK_F10                   = 0xF70D /* NSF10FunctionKey */
define VK_F11                   = 0xF70E /* NSF11FunctionKey */
define VK_F12                   = 0xF70F /* NSF12FunctionKey */
define VK_F13                   = 0xF710 /* NSF13FunctionKey */
define VK_F14                   = 0xF711 /* NSF14FunctionKey */
define VK_F15                   = 0xF712 /* NSF15FunctionKey */
define VK_F16                   = 0xF713 /* NSF16FunctionKey */
define VK_F17                   = 0xF714 /* NSF17FunctionKey */
define VK_F18                   = 0xF715 /* NSF18FunctionKey */
define VK_F19                   = 0xF716 /* NSF19FunctionKey */
define VK_F20                   = 0xF717 /* NSF20FunctionKey */
define VK_F21                   = 0xF718 /* NSF21FunctionKey */
define VK_F22                   = 0xF719 /* NSF22FunctionKey */
define VK_F23                   = 0xF71A /* NSF23FunctionKey */
define VK_F24                   = 0xF71B /* NSF24FunctionKey */
define VK_NUMLOCK               = 0xFF16 /* TODO */
define VK_SCROLL                = 0xF72F /* NSScrollLockFunctionKey */
define VK_LSHIFT                = 56
define VK_RSHIFT                = 60
define VK_LCONTROL              = 59
define VK_RCONTROL              = 62
define VK_LMENU                 = 0xF735 /* NSMenuFunctionKey */
define VK_RMENU                 = 0xF735 /* NSMenuFunctionKey */

/* Key Modifiers */
define KC_CTRL                  = (1 << 18) /* NSControlKeyMask */
define KC_SHIFT                 = (1 << 17) /* NSShiftKeyMask */
define KC_ALT                   = (1 << 19) /* NSAlternateKeyMask */

foreign enum _DW_EVENTS (
    _DW_EVENT_TIMER,                    /* Internal message for timers */
    _DW_EVENT_CONFIGURE,                /* Internal message for configure (resize) */
    _DW_EVENT_KEY_PRESS,                /* Internal message for key press */
    _DW_EVENT_BUTTON_PRESS,             /* Internal message for button press */
    _DW_EVENT_BUTTON_RELEASE,           /* Internal message for button release */
    _DW_EVENT_MOTION_NOTIFY,            /* Internal message for motion notification */
    _DW_EVENT_DELETE,                   /* Internal message for delete (object destruction) */
    _DW_EVENT_EXPOSE,                   /* Internal message for expose (draw) */ 
    _DW_EVENT_CLICKED,                  /* Internal message for click (touch) */
    _DW_EVENT_ITEM_ENTER,               /* Internal message for (container) item enter (activation) */
    _DW_EVENT_ITEM_CONTEXT,             /* Internal message for (container) item context (menu) */
    _DW_EVENT_LIST_SELECT,              /* Internal message for list(box) selection */
    _DW_EVENT_ITEM_SELECT,              /* Internal message for (container) item selection */
    _DW_EVENT_SET_FOCUS,                /* Internal message for (widget) setting focus */
    _DW_EVENT_VALUE_CHANGED,            /* Internal message for (widget) value changed */
    _DW_EVENT_SWITCH_PAGE,              /* Internal message for (notebook) page changed */
    _DW_EVENT_TREE_EXPAND,              /* Internal message for tree (node) expanded */
    _DW_EVENT_COLUMN_CLICK,             /* Internal message for (container) column clicked */
    _DW_EVENT_HTML_RESULT,              /* Internal message for HTML javascript result */
    _DW_EVENT_HTML_CHANGED,             /* Internal message for HTML status changed */
    _DW_EVENT_MAX
)

struct UserData (
    next *UserData,
    data ptr,
    varname *ubyte
)

struct _item (
    type int,
    hwnd HWND,
    width int,
    height int,
    origwidth int,
    origheight int,
    hsize int,
    vsize int,
    pad int
)

alias Item = _item

struct _box (
    count int,
    type int,
    hsize int,
    vsize int,
    pad int,
    grouppadx int,
    grouppady int,
    grouphwnd HWND,
    defaultitem HWND,
    usedpadx int,
    usedpady int,
    minheight int,
    minwidth int,
    width int,
    height int,
    flags ulong,
    items *Item
)

alias Box = _box
